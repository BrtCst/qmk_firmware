RGB_MATRIX_EFFECT(BRTCST_CUSTOM)

#ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS


const uint8_t PROGMEM ledmap[][RGB_MATRIX_LED_COUNT][3] = {

    /*HSV colors!*/
    [0] = {
    /*left half*/
    /*col1*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col2*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col3*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col4*/{124,255,255}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col5*/{0,0,0}, {0,0,0}, {217,206,172}, {0,0,0}, {0,0,0},
    /*col6*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col7*/{0,0,0}, {0,0,0}, {0,0,0},
    /*thumb black*/{0,0,0}, {0,0,0}, {0,0,0},
    /*thumb red*/{0,0,0},
    /*right half, from right to left*/
    /*col14*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col13*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, 
    /*col12*/{124,255,255}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col11*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col10*/{0,0,0}, {0,0,0}, {217,206,172}, {0,0,0}, {0,0,0},
    /*col9*/{124,255,255}, {0,0,0}, {0,0,0}, {0,0,0},
    /*thumb black*/{0,0,0}, {0,0,0}, {0,0,0},
    /*col8*/{0,0,0}, {0,0,0}, {0,0,0},
    /*thumb red*/{0,0,0}},

    [1] = {
    /*left half*/
    /*col1*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col2*/{0,0,0}, {0,0,0}, {206,229,226}, {0,0,0}, {0,0,0},
    /*col3*/{0,0,0}, {206,229,226}, {206,229,226}, {0,0,0}, {0,0,0},
    /*col4*/{124,255,255}, {0,0,0}, {206,229,226}, {0,0,0}, {0,0,0},
    /*col5*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col6*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col7*/{124,255,255}, {0,0,0}, {0,0,0},
    /*thumb black*/{0,0,0}, {0,0,0}, {0,0,0},
    /*thumb red*/{0,0,0},
    /*right half, from right to left*/
    /*col14*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col13*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col12*/{124,255,255}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col11*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col10*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, 
    /*col9*/{124,255,255}, {0,0,0}, {0,0,0}, {0,0,0},
    /*thumb black*/{0,0,0}, {0,0,0}, {0,0,0},
    /*col8*/{0,0,0}, {0,0,0}, {0,0,0},
    /*thumb red*/{0,255,255}},

    [2] = { 
    /*left half*/
    /*col1*/{0,255,255}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col2*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col3*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col4*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col5*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col6*/{36,220,208}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col7*/{36,220,208}, {0,0,0}, {0,0,0},
    /*thumb black*/{0,0,0}, {0,0,0}, {0,0,0},
    /*thumb red*/{0,0,0},
    /*right half, from right to left*/
    /*col14*/{154,218,204}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col13*/{154,218,204}, {0,0,0}, {0,0,0}, {0,0,0}, {154,218,204},
    /*col12*/{154,218,204}, {91,255,190}, {91,255,190}, {91,255,190}, {154,218,204},
    /*col11*/{154,218,204}, {91,255,190}, {91,255,190}, {91,255,190}, {91,255,190},
    /*col10*/{0,231,206}, {91,255,190}, {91,255,190}, {91,255,190}, {0,0,0},
    /*col9*/{0,0,0}, {0,0,0}, {0,0,0}, {154,218,204},
    /*thumb black*/{36,220,208}, {79,255,248}, {0,232,172},
    /*col8*/{0,0,0}, {0,0,0}, {0,0,0},
    /*thumb red*/{0,0,0} },

    [3] = {
    /*left half*/
    /*col1*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col2*/{0,0,0}, {124,255,255}, {124,255,255}, {124,255,255}, {0,0,0},
    /*col3*/{0,0,0}, {124,255,255}, {124,255,255}, {124,255,255}, {0,0,0},
    /*col4*/{0,0,0}, {124,255,255}, {124,255,255}, {124,255,255}, {195,247,239},
    /*col5*/{0,0,0}, {124,255,255}, {124,255,255}, {124,255,255}, {0,0,0},
    /*col6*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*thumb black*/{79,255,248}, {79,255,248}, {79,255,248},
    /*col7*/{79,255,248}, {79,255,248}, {79,255,248},
    /*thumb red*/{0,0,0},
    /*right half, from right to left*/
    /*col14*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col13*/{0,0,0}, {0,0,0}, {124,255,255}, {0,0,0}, {0,0,0},
    /*col12*/{0,0,0}, {65,197,235}, {236,245,158}, {0,0,0}, {0,0,0},
    /*col11*/{124,255,255}, {236,245,158}, {236,245,158}, {124,255,255}, {0,0,0},
    /*col10*/{0,0,0}, {65,197,235}, {236,245,158}, {0,0,0}, {0,0,0},
    /*col9*/{0,0,0}, {0,0,0}, {124,255,255}, {0,0,0},
    /*thumb black*/{0,0,0}, {0,0,0}, {0,0,0},
    /*col8*/{27,192,255}, {27,192,255}, {27,192,255},
    /*thumb red*/{0,0,0} },

    [4] = {
    /*left half*/
    /*col1*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col2*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col3*/{0,0,0}, {0,255,255}, {0,255,255}, {0,0,0}, {0,0,0},
    /*col4*/{0,0,0}, {13,255,255}, {13,255,255}, {0,0,0}, {0,0,0},
    /*col5*/{0,0,0}, {74,255,181}, {74,255,181}, {0,0,0}, {0,0,0},
    /*col6*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*thumb black*/{0,0,0}, {0,0,0}, {0,0,0},
    /*col7*/{0,0,0}, {0,0,0}, {0,0,0},
    /*thumb red*/{0,0,0},
    /*right half, from right to left*/
    /*col14*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col13*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*col12*/{0,0,0}, {0,0,0}, {124,255,255}, {124,255,255}, {236,245,158},
    /*col11*/{0,0,0}, {0,0,0}, {0,0,0}, {236,245,158}, {236,245,158},
    /*col10*/{0,0,0}, {0,0,0}, {0,0,0}, {65,197,235}, {236,245,158},
    /*col9*/{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
    /*thumb black*/{0,0,0}, {0,0,0}, {0,0,0},
    /*col8*/{0,0,0}, {0,0,0}, {0,0,0},
    /*thumb red*/{0,0,0} }
};

static bool BRTCST_CUSTOM(effect_params_t* params) {
    RGB_MATRIX_USE_LIMITS(led_min, led_max);
    int layer = get_highest_layer(layer_state|default_layer_state);
    for (uint8_t i = led_min; i < led_max; i++) {
        if (layer == 0) {
            rgb_matrix_set_color( i, 0, 0, 0 );
        } else {
            HSV hsv = {
            .h = pgm_read_byte(&ledmap[layer][i][0]),
            .s = pgm_read_byte(&ledmap[layer][i][1]),
            .v = pgm_read_byte(&ledmap[layer][i][2]),
            };
            if (!hsv.h && !hsv.s && !hsv.v) {
                rgb_matrix_set_color( i, 0, 0, 0 );
            } else {
                RGB rgb = hsv_to_rgb( hsv );
                float f = (float)rgb_matrix_config.hsv.v / UINT8_MAX;
                RGB_MATRIX_TEST_LED_FLAGS();
                rgb_matrix_set_color( i, f * rgb.r, f * rgb.g, f * rgb.b );
            }
        }
    }

    return rgb_matrix_check_finished_leds(led_max);
}

#endif // RGB_MATRIX_CUSTOM_EFFECT_IMPLS
